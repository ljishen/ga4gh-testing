# Directory Structure
#
# Server:
#   - {{ ga4gh_working_dir }}/srv/data:   For All Server Data
# Master:
#   - {{ file_server_dir }}/{{ test_results_folder_name }}/server_{{ server_commit_hash }}/{{ locust_folder_name }}/{{ locustfile_hash }}:    For Locust Stats File
#   - {{ file_server_dir }}/{{ test_results_folder_name }}/server_{{ server_commit_hash }}/{{ compliance_folder_name }}/{{ compliance_test_suite_commit_hash }}:    For Compliance Tests Results
#   - {{ ga4gh_working_dir }}/{{ test_results_folder_name }}/{{ locust_folder_name }}:    For Locust Stats File and Log File

- name: Install Docker on Server
  any_errors_fatal: true
  hosts: all
  become: yes
  roles:
    - { role: angstwad.docker_ubuntu, when: check_docker }

- name: Deploy GA4GH Reference Server
  hosts: server
  become: yes

  vars:
    server_volume_host_dir: "{{ ga4gh_working_dir }}/srv/data"
    server_image_name: "macieksmuga/ga4gh-server-m2:docker2"
    registry_db_filename: registry.db

  pre_tasks:
    - stat: path={{ server_volume_host_dir }}/{{ registry_db_filename }}
      register: registry_db

  roles:
    - { role: create_registry, when: recreate_registry_db or not registry_db.stat.exists }
    - { role: server, when: deploy_server }

- name: Query Server Source Code Commit Hash
  hosts: server
  become: yes
  gather_facts: no
  tasks:
    - name: Query Server Container ID
      command: docker ps -aqfl name={{ server_container_name }}
      register: server_container_id

    - name: Query Commit Hash
      command: docker exec {{ server_container_id.stdout }} git -C /srv/ga4gh/server log -1 --pretty=format:%H
      register: commit_hash

- name: Run Compliance Test Suite
  hosts: master
  become: yes
  gather_facts: no
  
  vars:
    server_commit_hash: "{{ hostvars[groups['server'][0]]['commit_hash']['stdout'] }}"

  roles:
    - { role: compliance_tests }

- name: Query Hash of locustfile and Deploy
  hosts: master
  become: yes
  gather_facts: no
  tasks:
    - name: Checkout the ga4gh-testing Repo (Ensure Updated)
      git:
        repo: https://github.com/ljishen/ga4gh-testing.git
        dest: "{{ ga4gh_working_dir }}/{{ ga4gh_testing_folder_name }}"
        clone: yes
        recursive: no
        force: yes
        update: yes
    - name: Query SHA1 Hash
      shell: >
        git -C {{ ga4gh_working_dir }}/{{ ga4gh_testing_folder_name }} ls-files -s locust/{{ locust_filename }} | awk -F' ' '{ print $2 }' 
      register: locustfile_hash
    - fail: msg="Unable to get SHA1 hash of locustfile.py"
      when: locustfile_hash.stdout is undefined
    - name: Ensure locustfile Directory Exists
      file: path={{ ga4gh_working_dir }}/{{ locust_folder_name }} state=directory
    - name: Deploy locustfile
      command: >
          cp {{ ga4gh_working_dir }}/{{ ga4gh_testing_folder_name }}/locust/{{ locust_filename }}
            {{ ga4gh_working_dir }}/{{ locust_folder_name }}

- name: Deploy locustfile to Slaves
  hosts: slave
  become: yes
  gather_facts: no
  tasks:
    - name: Ensure locustfile Directory Exists
      file: path={{ ga4gh_working_dir }}/{{ locust_folder_name }} state=directory
    - name: Copy locustfile to Remote
      synchronize:
        src: "{{ ga4gh_working_dir }}/{{ ga4gh_testing_folder_name }}/locust/{{ locust_filename }}"
        dest: "{{ ga4gh_working_dir }}/{{ locust_folder_name }}/{{ locust_filename }}"
        mode: push
        times: yes
      delegate_to: groups['master'][0]

- name: Run Locust Testing
  hosts: locust
  become: yes
  gather_facts: no

  vars:
    num_slaves: "{{ groups.slave | length }}"
    container_name: "locust"

  roles:
    - { role: locust_standalone, when: num_slaves | int == 0 }
    - { role: locust_distributed, when: num_slaves | int != 0 }

- name: Copy Locust Stats File to File Server Directory
  hosts: master
  become: yes
  gather_facts: no
  
  vars:
    server_commit_hash: "{{ hostvars[groups['server'][0]]['commit_hash']['stdout'] }}"
 
  tasks:
    - block:
        - name: Ensure Destination Directory Exists
          file:
            path: "{{ file_server_dir }}/{{ test_results_folder_name }}/server_{{ server_commit_hash }}/{{ locust_folder_name }}/{{ locustfile_hash.stdout }}"
            state: directory
        - name: Copy Stats File
          command: >
              cp {{ ga4gh_working_dir }}/{{ test_results_folder_name }}/{{ locust_folder_name }}/{{ locust_stats_filename }}
                {{ file_server_dir }}/{{ test_results_folder_name }}/server_{{ server_commit_hash }}/{{ locust_folder_name }}/{{ locustfile_hash.stdout }}
      when: groups.slave | length == 0
